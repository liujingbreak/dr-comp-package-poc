# If you are not familiar with YAML format just like me, read https://en.wikipedia.org/wiki/YAML
# and js-yaml https://www.npmjs.com/package/js-yaml
# PLEASE DON'T MODIFY THIS FILE, instead you may create a local file called `config.local.yaml`
# to overwrites this file.
log4jsReloadSeconds: 300
srcDir: src/internal
# destDir contains build results like node server required data, template and timestamp file which
# helps to speed up build process in local dev environment
destDir: dist

# staticDir folder ideally should be inside `destDir`, you can change name of it
# or move its location out of `destDir`, but it can't not be out of process.cwd()
staticDir: dist/static

port: 14333 # read by @dr/http-server
sslPort: 14433
# set max-age property of the Cache-Control header in `ms` format, see https://github.com/expressjs/serve-static
# unit convention reference to github.com/guille/ms.js
cacheControlMaxAge: "365 days"
packageScopes:
  - dr
  - dr-core

# Only build out i18n bundles for following locales, e.g. for angularjs it means only
# some locales for file match pattern:
#  i18n/angular-locale_{locale}.js
# will be built out into bundles.
locales:
    - zh
    - en

nodeRoutePath: /

# enable devMode to denote default builder tool do not do things like uglify JS bundles,
# and also it will set process.env.NODE_ENV = 'production' if false
# revisioning file name...
devMode: false

# You don't want others read your source code in production environment
enableSourceMaps: false
# If we have public CDN domain name like "http://cdn.dianrong.com"
staticAssetsURL: ""

serverURL: ""

# Override bundle file name for installed components (including 3rd-party library),
# otherwise browserify will bundle them with every package that depends on them.
vendorBundleMap:
  core: # API bundle, always be loaded at first
    - lodash
  ui-lib: # bundle name
      - jquery
      - bluebird
  alt-lib:
      - "@dr/light-lodash"
# Global `browserify.bundle()` `noParse` option, there is also a package specific `dr.browserifyNoParse`
# available option in individual package.json file
browserifyNoParse:
    - q
    - lodash
    - jquery
    - bluebird
    - "@dr/angularjs"
    - "@dr/gsap"

packageContextPathMapping:
    # Package short name - route path map, used by express server.
    # By default, every package's is mapped to a route context path "/<package short name>"
    # e.g.
    #   if package name is "@dr/example-dr", default route root path will be `/example-dr`
    # If you want change this rule, config route path here.
    doc-home: /

# During developing, you can set this to `true` to make every package to a single bundle
bundlePerPackage: false
# If you are not developer of this platform (like you are using this platform as
# dependency in node_modules folder), please don't override this option, but
# config `recipeFolder` instead.
#
# If you are about to read this property programatically, read `internalRecipeFolderPath`
# instead, it will be resolved to relative path to this platform package folder,
# even it is under node_modules folder loaded as dependency
internalRecipeFolder: recipes/internal-recipe

# If you want to split your source code to different recipes
recipeSrcMapping:
    recipes/garage-recipe: src/garage
    recipes/examples-recipe: src/examples
    recipes/internal-tools-recipe: src/tools

# Recipes which are installed from registry server, they are owned by other contributors,
# add to this list to make them a part of you server.
installedRecipes:
    - node_modules/@dr/*-recipe
    - node_modules/@dr/recipe-*

gulp:
    watchTimeout: 3500

# Following is a list of current configuration property names of which property
# are visible to browser side environment, meaning those properties will be stringified
# and downloaded to client browser as a property of API object, can be returned from
# script:
#   __api.config()
#
# Not everything in these file should be visible to browser, e.g. database connection setting
browserSideConfigProp:
    - staticAssetsURL
    - serverURL
    - packageContextPathMapping
    - locales
    - devMode

e2etestHelper:
    selenium:
        driverPath: 'node_modules/@dr/chrome-driver/linux64'
