var yargs = require('yargs');

module.exports = init(yargs);

function init(yargs) {
	return yargs.usage('Usage: $0 <command> [-b <bundle>] [-p package]\n' +
	'$0 link [-r <recipe folder>] [-d <src folder>]')
	.command(['init', 'init-workspace'], 'Initialize workspace, copy project  and other basic configuration')
	.command(['install'], 'Install components and their dependency')
	.command(['project'], '[-a|--add <project-dir>] Add or list project folders')
	.command(['clean'], 'Clean "destDir" and symbolic links from node_modules')
	.command('ls', 'If you want to know how many components will actually run, this command prints out a list and the priorities, including installed components')
	.command('compile', '[-c <config> -c ...] [-p <entry-component> ...] compile package into static browser bundles')
	.command('lint', '[--project|pj <project-dir>] source code style check')
//	.command('build-prod', 'disable config.local.yaml, build for production environment')
	.command('publish', '[--project|pj <project-dir>] npm publish every pakages in source code folder including all mapped recipes')
	.command('unpublish', '[--project|pj <project-dir>] npm unpublish every pakages in source code folder including all mapped recipes of version number in current source code')
	.command('bump', '[--project|pj <project-dir>] [-d <package-dir>] [-v major|minor|patch] [--all] bump version number of all package.json or [-d] only specific package, useful to call this before publishing packages, default is increasing patch number by 1')
	.command('test', '[-p <package-short-name>] [-f <spec-file-path>] run Jasmine for specific or all packages')
	.command('e2e', '[-d <test-suit-dir] [-f <spec-file-path>] [--server <start-js-file>] [--dir <working directory>] [--browser <chrome|firefox|ie|opera|edge|safari>]run Jasmine for end-to-end tests')
	.describe('browserify', 'Run @dr/browserify-builder together with Webpack components')
	.describe('no-package-cache', 'If you run `gulp compile` with `-p <package>`, to speed up compilation, it will not read newly changed package.json file but get information from cached data, this option prevents this behaviour')

	.describe('c', '<config.xxx.yaml> the config file, default is "config.local.yaml"')
	.alias('c', 'config')
	.describe('a', '<project dir> Add project folder')
	.alias('a', 'add')
	.describe('b', '<bundle-name> if used with command `compile` or `build`, it will only compile specific bundle, which is more efficient (only for Browserify)')
	.alias('b', 'bundle')
	.describe('p', '<package-short-name> if used with command `compile`, `build`, `lint`, it will only build and check style on specific package (component), which is more efficient (for Webpack it must be Entry package)')
	.alias('p', 'package')
	.describe('l', '<locale> gulp build/compile for specific locale, e.g. "en", "zh", which are configured in config.yaml')
	.alias('l', 'locale')
	.describe('only-js', 'only rebuild JS bundles (only for Browserify)')
	.describe('only-css', 'only rebuild CSS bundles (only for Browserify)')
	.describe('d', '<src foldr> if used with command `link`, it will link packages from specific folder instead of `srcDir` configured in config.yaml')
	.describe('all', 'Used with command `bump` meaning bump all components and recipes from all projects')
	.describe('r', '<recipe foldr> if used with command `link`, it will link packages only to specific recipe folder instead of `recipeFolder` configured in config.yaml')
	.describe('v', 'major | minor | patch | prerelease, used with `bump`')
	.describe('f', '<file-path> command `gulp test -f specFile1 [-f specFile2] ...`')
	.alias('f', 'file')
	.describe('project', '<project directory> Used with `bump`, `publish`, `unpublish`, `lint`')
	.alias('project', 'pj')
	.describe('browser', 'Used with command `e2e`')
	.choices('browser', ['firefox', 'chrome', 'ie', 'safari', 'opera'])
	.describe('server', '<start JS file>, optional, used with command `e2e`, automatically start test server')
	.describe('root', '<working directory>, optional, used with command `e2e`, indicates which directory as test server start directory')
	.default('root', process.env.DR_ROOT_DIR || process.cwd())
	.demand(1)
	.global(['a', 'c', 'b', 'p', 'l', 'only-js', 'only-css', 'd', 'r', 'v', 'f', 'browser', 'server', 'root', 'project', 'all'])
	.help('h').alias('h', 'help')
	.epilog('copyright 2016')
	.argv;
}
